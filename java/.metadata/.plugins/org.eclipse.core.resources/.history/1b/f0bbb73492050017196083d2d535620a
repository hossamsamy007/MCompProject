package uk.ac.ncl.burton.twy.ZPK.components.testing;

import static org.junit.Assert.*;

import java.math.BigInteger;
import java.util.List;

import org.junit.Test;

import uk.ac.ncl.burton.twy.ZPK.components.prover.PKComponentProver;
import uk.ac.ncl.burton.twy.ZPK.components.prover.PKComponentProverAlpha;
import uk.ac.ncl.burton.twy.ZPK.components.verifier.PKComponentVerifier;
import uk.ac.ncl.burton.twy.ZPK.components.verifier.PKComponentVerifierAlpha;
import uk.ac.ncl.burton.twy.maths.CyclicGroup;

public class PKTesting {

	@Test
	public void ComponentAlphaSetupTest() {
		
		CyclicGroup G = CyclicGroup.generateGroup(1024);
		
		BigInteger g = G.getG();
		BigInteger r = BigInteger.TEN;
		
		BigInteger h = G.generateGenerator();
		
		
		PKComponentProver PAlpha1 = new PKComponentProverAlpha( G, g, r);
		PKComponentVerifier VAlpha1 = new PKComponentVerifierAlpha( G );
		
		BigInteger t = PAlpha1.getCommitment();
		System.out.println("t: " + t);
		
		BigInteger c = VAlpha1.getChallenge();
		System.out.println("c: " + c);
		
		BigInteger s = PAlpha1.getResponse(c);
		System.out.println("s: " + s);
		
		List<BigInteger> passingVariables = PAlpha1.getPassingVariables();
		assertTrue(VAlpha1.verify(t, s, passingVariables));
		
		
	}

}
