package uk.ac.ncl.burton.twy.ZPK2;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import uk.ac.ncl.burton.twy.ZPK.PKConfig;
import uk.ac.ncl.burton.twy.ZPK.components.prover.PKComponentProverBasic;
import uk.ac.ncl.burton.twy.ZPK2.components.PoKComponentProver;
import uk.ac.ncl.burton.twy.maths.CyclicGroup;

public class PoKProver {

	private CyclicGroup G;
	
	public PoKProver(CyclicGroup G){
		this.G = G;
	}
	
	private List<PoKComponentProver> components = new ArrayList<PoKComponentProver>();
	
	public void addComponent( PoKComponentProver comp ){
		components.add(comp);
	}
	
	
	public String getSchema(){
		return null;
	}
	
	
	
	// == JSON Text ==
		public String getJSONCommitment(){
			String json = "";
			
			json += "{\n";
				json += "\t\"PK_id\":\"" + PK_id + "\",\n";
				json += "\t\"protocol_version\":" + Arrays.toString(PKConfig.PROTOCOL_VERSION) + ",\n";
				json += "\t\"step\":\"commitment\",\n";
				json += "\t\"components\":[\n";
					for( int i = 0 ; i < components.size(); i++ ){
						
						json += "\t\t{\n";
							json += "\t\t\t\"type\":\"" +  ((PKComponentProverBasic)components.get(i)).getComponentType()  + "\",\n";
							json += "\t\t\t\"t\":\"" +  components.get(i).getCommitment() + "\",\n";
							json += "\t\t\t\"component_id\":\"" + ((PKComponentProverBasic)components.get(i)).getComponentID() + "\"\n";
						json += "\t\t}";
						
						if( i < components.size()-1 ) json += ",";
						json += "\n";
					}
				json += "\t],\n";
				json += "\t\"time\":" + (System.currentTimeMillis()/1000) + "\n";
			json += "}\n";
			
			return json;
		}
	
}
