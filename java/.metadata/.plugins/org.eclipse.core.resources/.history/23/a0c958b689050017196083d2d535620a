package uk.ac.ncl.burton.twy.ZPK.components.verifier;

import java.math.BigInteger;

import uk.ac.ncl.burton.twy.maths.CyclicGroup;
import uk.ac.ncl.burton.twy.utils.BigIntegerUtils;

public abstract  class PKComponentVerifierBasic implements PKComponentVerifier {

	private CyclicGroup G;
	private BigInteger challenge;
	
	PKComponentVerifierBasic(CyclicGroup G ){
		this.G = G;
		challenge = BigIntegerUtils.randomBetween( BigInteger.ONE, G.getQ() );
	}
	
	
	@Override
	public BigInteger getChallenge() {
		return challenge;
	}
	
	/**
	 * 
	 * @param newChallenge
	 * @return
	 */
	public BigInteger setChallenge( BigInteger newChallenge ) {
		this.challenge = newChallenge;
	}

	@Override
	public abstract boolean verify(BigInteger commitment, BigInteger response);

}
