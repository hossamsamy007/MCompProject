package uk.ac.ncl.burton.twyb.ZKPoK.components;

import java.math.BigInteger;

public class PKRandomnessManager {

	/**
	 * Transfer a random exponent value between one component to another.
	 * @param comp0 The component to get random exponent value form
	 * @param index0 The exponent index of the first component
	 * @param comp1 The component to set random exponent value to
	 * @param index1 The exponent index of the second component
	 * @return
	 */
	public static boolean transferRandomness( final PKComponentProver comp0, final int index0 , PKComponentProver comp1, final int index1 ){
	
		comp1.setRandomExponent(index1, comp0.getRandomExponent(index0) );
		
		return true;
	}
	
	
	/**
	 * Get the random exponent value from two components and multiply by another value 
	 * @param comp0
	 * @param index0
	 * @param comp1
	 * @param index1
	 * @param comp2 Target component
	 * @param index3 Target exponent index
	 * @param value The final value to multiply
	 * @return
	 */
	public static boolean transferRandomness2Multiplyx( final PKComponentProver comp0, final int index0 
			, PKComponentProver comp1, final int index1, final PKComponentProver comp3, final int index2, final BigInteger value ){
		
		comp1.setRandomExponent(index1, comp0.getRandomExponent(index0) );
		
		return true;
	}
	
}
